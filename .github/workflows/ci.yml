name: CI

on: [push]

jobs:
  pytest-patches:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v2
    - run: cd pytest-patches && pip install -e . && pip install -e .[lint] && pip install -e .[types] && pip install -e .[publish]  && pip install -e .[test]
    - name: Lint (pytest-patches)
      run: flake8 pytest-patches
    - name: Typing (pytest-patches)
      run: mypy pytest-patches
    - name: Test (pytest-patches)
      run: pytest --cov=pytest-patches pytest-patches
    - name: Build (pytest-patches)
      run: cd pytest-patches && python setup.py bdist_wheel && ls dist
    - name: Publish (pytest-patches)
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
        packages_dir: pytest-patches/dist
    - name: Archive code coverage results (pytest-patches)
      uses: actions/upload-artifact@v2
      with:
        name: coverage__pytest-patches
        path: .coverage

  aio_functional:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v2
    - run: cd aio.functional && pip install -e . && pip install -e .[lint] && pip install -e .[types] && pip install -e .[publish] && pip install -e .[test]
    - name: Lint (aio.functional)
      run: flake8 aio.functional
    - name: Typing (aio.functional)
      run: mypy --namespace-packages aio.functional/aio
    - name: Test (aio.functional)
      run: pytest --cov=aio.functional aio.functional
    - name: Build (aio.functional)
      run: cd aio.functional && python setup.py bdist_wheel && ls dist
    - name: Publish (aio.functional)
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
        packages_dir: aio.functional/dist
    - name: Archive code coverage results (aio.functional)
      uses: actions/upload-artifact@v2
      with:
        name: coverage__aio_functional
        path: .coverage

  coverage:
    runs-on: ubuntu-latest
    needs:
    - pytest-patches
    - aio_functional
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v2
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v2
    - name: Install coverage
      run: pip install coverage
    - name: Combine coverage files
      run: coverage combine $(find . -wholename "./coverage__*/.coverage")
    - name: Coverage report
      run: coverage report
    - name: Archive all code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: .coverage
