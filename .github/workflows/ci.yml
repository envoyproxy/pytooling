name: CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
        - abstracts
        - aio.functional
        - aio.stream
        - aio.subprocess
        - aio.tasks
        - envoy.base.checker
        - envoy.base.command
        - envoy.base.runner
        - envoy.base.utils
        - envoy.docker.utils
        - envoy.dependency.pip_check
        - envoy.distribution.distrotest
        - envoy.distribution.publish
        - envoy.distribution.verify
        - envoy.github.abstract
        - envoy.github.release
        - envoy.gpg.identity
        - envoy.gpg.sign
        - mypy-abstracts
        - pytest-patches
        python-version:
        - 3.8
        - 3.9
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - run: cd ${{ matrix.package }} && pip install -e . && pip install -e .[lint] && pip install -e .[types] && pip install -e .[test]
    - name: Typing (${{ matrix.package }})
      run: |
        CONFIG=()
        if [[ -e "${{ matrix.package }}/mypy.ini" ]]; then
            CONFIG=("--config-file" "${{ matrix.package }}/mypy.ini")
        fi
        MYPYPATH=${{ matrix.package }} \
            mypy ${CONFIG[@]} \
                 --no-warn-no-return \
                 --namespace-packages \
                 --explicit-package-bases \
                 -p $(echo ${{ matrix.package }} | tr '-' '_')
    - name: Test (${{ matrix.package }})
      run: pytest --cov=${{ matrix.package }} ${{ matrix.package }}
    - name: Doctest (${{ matrix.package }})
      run: python3 -m doctest -oELLIPSIS -v ${{ matrix.package }}/README.rst
    - name: Lint (${{ matrix.package }})
      run: flake8 ${{ matrix.package }}
    - name: Archive code coverage results (${{ matrix.package }})
      uses: actions/upload-artifact@v2
      with:
        name: coverage__${{ matrix.python_version }}__${{ matrix.package }}
        path: .coverage

  coverage:
    runs-on: ubuntu-latest
    needs:
    - test
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v2
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v2
    - name: Install coverage
      run: pip install coverage
    - name: Combine coverage files
      run: coverage combine $(find . -wholename "./coverage__*/.coverage")
    - name: Coverage report
      run: coverage report
    - name: Coverage HTML
      run: coverage html && tar czf coverage.tar.gz htmlcov
    - name: Archive all code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: coverage.tar.gz

  publish:
    runs-on: ubuntu-latest
    needs:
    - coverage
    strategy:
      matrix:
        package:
        - abstracts
        - aio.functional
        - aio.subprocess
        - aio.stream
        - aio.tasks
        - envoy.base.checker
        - envoy.base.command
        - envoy.base.runner
        - envoy.base.utils
        - envoy.dependency.pip_check
        - envoy.docker.utils
        - envoy.distribution.distrotest
        - envoy.distribution.publish
        - envoy.distribution.verify
        - envoy.github.abstract
        - envoy.github.release
        - envoy.gpg.identity
        - envoy.gpg.sign
        - mypy-abstracts
        - pytest-patches
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
    - name: Install publishing requirements (${{ matrix.package }})
      run: cd ${{ matrix.package }} && pip install -e .[publish]
    - name: Build (${{ matrix.package }})
      run: cd ${{ matrix.package }} && python setup.py bdist_wheel && ls dist
    - name: Set version
      run:  echo "PACKAGE_VERSION=$(cat ${{ matrix.package }}/VERSION)" >> $GITHUB_ENV
    - name: Publish (${{ matrix.package }})
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags') && endsWith(env.PACKAGE_VERSION, '-dev') != true
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
        packages_dir: ${{ matrix.package }}/dist
